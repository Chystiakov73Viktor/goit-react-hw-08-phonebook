{"version":3,"file":"static/js/445.5a6150f0.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","redux/filter/filterSelectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContactsValue = state => state.users.contacts;\nexport const selectContactsIsLoading = state => state.users.isLoading;\nexport const selectContactsError = state => state.users.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"tatel\":\"Contacts_tatel__5J-py\",\"tatelText\":\"Contacts_tatelText__AnW7Y\",\"textError\":\"Contacts_textError__24FZg\",\"container\":\"Contacts_container__WzsIr\"};","// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"ContactForm_formContact__CkY07\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"buttonContact\":\"ContactForm_buttonContact__ybNwn\",\"errorText\":\"ContactForm_errorText__ueVpO\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsValue } from 'redux/contacts/contactsSelectors';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactForm.module.css';\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={msg => <p className={css.errorText}>{msg}</p>}\n    />\n  );\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().min(7).max(20).required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsValue);\n  const handlerSubmit = (values, { resetForm }) => {\n    const changeNameCase = values.name.toLowerCase();\n    const isExist = contacts.some(\n      contact => contact.name.toLowerCase() === changeNameCase\n    );\n\n    if (isExist) {\n      alert(`${values.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(values));\n    resetForm();\n  };\n  const sampleName =\n    \"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\n  const sampleNumber =\n    '\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}';\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handlerSubmit}\n      >\n        <Form className={css.formContact}>\n          <label className={css.label}>\n            Name\n            <Field\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter your name\"\n              pattern={sampleName}\n              required\n            />\n            <FormError name=\"name\" />\n          </label>\n          <label className={css.label}>\n            Number\n            <Field\n              className={css.input}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"+380 (xx) xxx xx xx\"\n              pattern={sampleNumber}\n              required\n            />\n            <FormError name=\"number\" />\n          </label>\n          <button className={css.buttonContact} type=\"submit\">\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","export const selectFilteredValue = state => state.filter.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredValue } from 'redux/filter/filterSelectors';\nimport { setFilteredContacts } from 'redux/filter/filterReducer';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(selectFilteredValue);\n\n  return (\n    <div className={css.container}>\n      <label>\n        Find contacts by name\n        <input\n          className={css.input}\n          type=\"text\"\n          value={filterContacts}\n          onChange={evt =>\n            dispatch(setFilteredContacts(evt.currentTarget.value))\n          }\n        />\n      </label>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"title\":\"ContactItem_title__3vgWI\",\"button\":\"ContactItem_button__IRFBz\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport css from './ContactItem.module.css';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  return (\n    <li key={id} className={css.item}>\n      <p className={css.title}>\n        {name}: {number}\n      </p>\n      <button\n        className={css.button}\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import React from 'react';\nimport { createSelector } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\nimport { selectContactsValue } from 'redux/contacts/contactsSelectors';\nimport { selectFilteredValue } from 'redux/filter/filterSelectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const selectFiltered = createSelector(\n    [selectContactsValue, selectFilteredValue],\n    (contacts, filter) => {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    }\n  );\n\n  const contactFiltered = useSelector(selectFiltered);\n\n  return (\n    <ul className={css.list}>\n      {contactFiltered.map(contact => (\n        <ContactItem key={contact.id} {...contact} />\n      ))}\n    </ul>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contactsOperations';\nimport {\n  selectContactsValue,\n  selectContactsError,\n  selectContactsIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport css from './Contacts.module.css';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Loader } from 'components/Loader/Loader';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nfunction Contacts() {\n  const contacts = useSelector(selectContactsValue);\n  const isLoading = useSelector(selectContactsIsLoading);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className={css.tatel}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.tatelText}>Contacts</h2>\n      {error !== null && <p className=\"textError\">{error}</p>}\n      {contacts.length !== 0 && (\n        <>\n          <Filter />\n          <ContactList />\n          <div className={css.container}>{isLoading && <Loader />}</div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Contacts;\n"],"names":["selectContactsValue","state","users","contacts","selectContactsIsLoading","isLoading","selectContactsError","error","FormError","_ref","name","_jsx","ErrorMessage","render","msg","className","css","children","schema","yup","shape","required","number","min","max","initialValues","ContactForm","dispatch","useDispatch","useSelector","_Fragment","Formik","validationSchema","onSubmit","values","_ref2","resetForm","changeNameCase","toLowerCase","some","contact","alert","concat","addContact","_jsxs","Form","Field","type","placeholder","pattern","selectFilteredValue","filter","Filter","filterContacts","value","onChange","evt","setFilteredContacts","currentTarget","ContactItem","id","onClick","deleteContact","ContactList","selectFiltered","createSelector","includes","contactFiltered","map","_objectSpread","useEffect","getContacts","length","Loader"],"sourceRoot":""}
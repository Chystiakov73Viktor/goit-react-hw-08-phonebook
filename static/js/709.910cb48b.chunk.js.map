{"version":3,"file":"static/js/709.910cb48b.chunk.js","mappings":"yOACA,EAA8B,2BAA9B,EAAiE,qBAAjE,EAA8F,qBAA9F,EAAmI,6B,SCmEnI,EA9Dc,WACZ,IAAAA,GAMIC,EAAAA,EAAAA,MALFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAQJ,EAARI,SACaC,EAAML,EAAnBM,UAAaD,OACbE,EAAKP,EAALO,MAEIC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAiBC,SAAUV,GAN7B,SAAAW,GACfN,GAASO,EAAAA,EAAAA,IAAMD,IACfP,GACF,IAGqES,SAAA,EACjEC,EAAAA,EAAAA,KAAA,SAAON,UAAWC,EAAUI,SAAC,WAC7BC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEP,UAAWC,EACXO,KAAK,QACLC,YAAY,mBACZC,aAAa,OACTnB,EAAS,WAEdG,EAAOiB,QAASL,EAAAA,EAAAA,KAAA,KAAAD,SAAIX,EAAOiB,MAAMC,WAClCN,EAAAA,EAAAA,KAAA,SAAON,UAAWC,EAAUI,SAAC,cAC7BC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,GAAA,CACEP,UAAWC,EACXO,KAAK,WACLC,YAAY,sBACZC,aAAa,OACTnB,EAAS,cAEdG,EAAOmB,WAAYP,EAAAA,EAAAA,KAAA,KAAAD,SAAIX,EAAOmB,SAASD,WACxCN,EAAAA,EAAAA,KAAA,UACEN,UAAWC,EACXO,KAAK,SACLM,QAAS,WACQ,CACb,CACEN,KAAM,SACNO,KAAM,QACNH,QAAS,qBAEX,CACEJ,KAAM,SACNO,KAAM,WACNH,QAAS,sBAINI,SAAQ,SAAAC,GAAA,IAAGF,EAAIE,EAAJF,KAAMP,EAAIS,EAAJT,KAAMI,EAAOK,EAAPL,QAAO,OACnCnB,EAASsB,EAAM,CAAEP,KAAAA,EAAMI,QAAAA,GAAU,GAErC,EAAEP,SACH,aAKP,C","sources":["webpack://react-homework-template/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formContact\":\"Login_formContact__dC8X3\",\"label\":\"Login_label__MvF1C\",\"input\":\"Login_input__6Emyd\",\"buttonContact\":\"Login_buttonContact__9eUwB\",\"errorText\":\"Login_errorText__uaEdO\"};","import * as React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { useForm } from 'react-hook-form';\nimport css from './Login.module.css';\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: { errors },\n    reset,\n  } = useForm();\n  const dispatch = useDispatch();\n  const onSubmit = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  return (\n    <form className={css.formContact} onSubmit={handleSubmit(onSubmit)}>\n      <label className={css.label}>Email</label>\n      <input\n        className={css.input}\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        autoComplete=\"off\"\n        {...register('email')}\n      />\n      {errors.email && <p>{errors.email.message}</p>}\n      <label className={css.label}>Password</label>\n      <input\n        className={css.input}\n        type=\"password\"\n        placeholder=\"Enter your password\"\n        autoComplete=\"off\"\n        {...register('password')}\n      />\n      {errors.password && <p>{errors.password.message}</p>}\n      <button\n        className={css.buttonContact}\n        type=\"submit\"\n        onClick={() => {\n          const inputs = [\n            {\n              type: 'manual',\n              name: 'email',\n              message: 'Double Check This',\n            },\n            {\n              type: 'manual',\n              name: 'password',\n              message: 'Triple Check This',\n            },\n          ];\n\n          inputs.forEach(({ name, type, message }) =>\n            setError(name, { type, message })\n          );\n        }}\n      >\n        Log in\n      </button>\n    </form>\n  );\n};\n\nexport default Login;\n"],"names":["_useForm","useForm","register","handleSubmit","setError","errors","formState","reset","dispatch","useDispatch","_jsxs","className","css","onSubmit","data","logIn","children","_jsx","_objectSpread","type","placeholder","autoComplete","email","message","password","onClick","name","forEach","_ref"],"sourceRoot":""}